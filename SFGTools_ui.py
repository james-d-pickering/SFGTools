# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\au538552\Dropbox\Work\software\SFGTools\SFGTools_ui.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1041, 815)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.experimental_params = QtWidgets.QGroupBox(self.centralwidget)
        self.experimental_params.setGeometry(QtCore.QRect(10, 240, 261, 131))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.experimental_params.setFont(font)
        self.experimental_params.setObjectName("experimental_params")
        self.layoutWidget = QtWidgets.QWidget(self.experimental_params)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 18, 241, 91))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.layoutWidget.setFont(font)
        self.layoutWidget.setObjectName("layoutWidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.layoutWidget)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.calibrate_offset_box = QtWidgets.QLineEdit(self.layoutWidget)
        self.calibrate_offset_box.setEnabled(False)
        self.calibrate_offset_box.setObjectName("calibrate_offset_box")
        self.gridLayout_2.addWidget(self.calibrate_offset_box, 4, 1, 1, 1)
        self.upconversion_line_dropdown = QtWidgets.QComboBox(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.upconversion_line_dropdown.setFont(font)
        self.upconversion_line_dropdown.setEditable(True)
        self.upconversion_line_dropdown.setObjectName("upconversion_line_dropdown")
        self.upconversion_line_dropdown.addItem("")
        self.upconversion_line_dropdown.addItem("")
        self.upconversion_line_dropdown.addItem("")
        self.upconversion_line_dropdown.addItem("")
        self.gridLayout_2.addWidget(self.upconversion_line_dropdown, 2, 1, 1, 1)
        self.upconvert_label = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.upconvert_label.setFont(font)
        self.upconvert_label.setObjectName("upconvert_label")
        self.gridLayout_2.addWidget(self.upconvert_label, 2, 0, 1, 1)
        self.calibrate_offset_label = QtWidgets.QLabel(self.layoutWidget)
        self.calibrate_offset_label.setEnabled(False)
        self.calibrate_offset_label.setObjectName("calibrate_offset_label")
        self.gridLayout_2.addWidget(self.calibrate_offset_label, 4, 0, 1, 1)
        self.calibrate_offset_unit_label = QtWidgets.QLabel(self.layoutWidget)
        self.calibrate_offset_unit_label.setEnabled(False)
        self.calibrate_offset_unit_label.setObjectName("calibrate_offset_unit_label")
        self.gridLayout_2.addWidget(self.calibrate_offset_unit_label, 4, 2, 1, 1)
        self.label = QtWidgets.QLabel(self.layoutWidget)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 2, 2, 1, 1)
        self.data_input_box = QtWidgets.QGroupBox(self.centralwidget)
        self.data_input_box.setGeometry(QtCore.QRect(10, 70, 261, 171))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.data_input_box.sizePolicy().hasHeightForWidth())
        self.data_input_box.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.data_input_box.setFont(font)
        self.data_input_box.setObjectName("data_input_box")
        self.tabWidget = QtWidgets.QTabWidget(self.data_input_box)
        self.tabWidget.setGeometry(QtCore.QRect(0, 30, 271, 131))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.tabWidget.setFont(font)
        self.tabWidget.setObjectName("tabWidget")
        self.widget = QtWidgets.QWidget()
        self.widget.setObjectName("widget")
        self.gridLayoutWidget = QtWidgets.QWidget(self.widget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 10, 241, 84))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.ref_string_box = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.ref_string_box.setObjectName("ref_string_box")
        self.gridLayout.addWidget(self.ref_string_box, 2, 1, 1, 1)
        self.sample_string_box = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.sample_string_box.setObjectName("sample_string_box")
        self.gridLayout.addWidget(self.sample_string_box, 2, 0, 1, 1)
        self.get_data_button = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.get_data_button.setObjectName("get_data_button")
        self.gridLayout.addWidget(self.get_data_button, 3, 1, 1, 1)
        self.browse_data_directory = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.browse_data_directory.setObjectName("browse_data_directory")
        self.gridLayout.addWidget(self.browse_data_directory, 1, 0, 1, 1)
        self.bg_string_box = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.bg_string_box.setObjectName("bg_string_box")
        self.gridLayout.addWidget(self.bg_string_box, 1, 1, 1, 1)
        self.auto_sort_checkbox = QtWidgets.QCheckBox(self.gridLayoutWidget)
        self.auto_sort_checkbox.setObjectName("auto_sort_checkbox")
        self.gridLayout.addWidget(self.auto_sort_checkbox, 3, 0, 1, 1)
        self.tabWidget.addTab(self.widget, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.tab_2)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(10, 10, 234, 86))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.browse_ref_files = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.browse_ref_files.setObjectName("browse_ref_files")
        self.gridLayout_3.addWidget(self.browse_ref_files, 1, 0, 1, 1)
        self.browse_signal_files = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.browse_signal_files.setObjectName("browse_signal_files")
        self.gridLayout_3.addWidget(self.browse_signal_files, 0, 0, 1, 1)
        self.browse_background_files = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.browse_background_files.setObjectName("browse_background_files")
        self.gridLayout_3.addWidget(self.browse_background_files, 0, 1, 1, 1)
        self.browse_ref_bg_files = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.browse_ref_bg_files.setObjectName("browse_ref_bg_files")
        self.gridLayout_3.addWidget(self.browse_ref_bg_files, 1, 1, 1, 1)
        self.tabWidget.addTab(self.tab_2, "")
        self.data_processing = QtWidgets.QGroupBox(self.centralwidget)
        self.data_processing.setGeometry(QtCore.QRect(280, 70, 261, 321))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.data_processing.setFont(font)
        self.data_processing.setObjectName("data_processing")
        self.processing_tab = QtWidgets.QTabWidget(self.data_processing)
        self.processing_tab.setGeometry(QtCore.QRect(10, 30, 241, 281))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.processing_tab.setFont(font)
        self.processing_tab.setTabPosition(QtWidgets.QTabWidget.North)
        self.processing_tab.setObjectName("processing_tab")
        self.general_processing = QtWidgets.QWidget()
        self.general_processing.setObjectName("general_processing")
        self.layoutWidget1 = QtWidgets.QWidget(self.general_processing)
        self.layoutWidget1.setGeometry(QtCore.QRect(10, 10, 221, 238))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.layoutWidget1)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.subtract_checkbox = QtWidgets.QCheckBox(self.layoutWidget1)
        self.subtract_checkbox.setChecked(True)
        self.subtract_checkbox.setObjectName("subtract_checkbox")
        self.gridLayout_4.addWidget(self.subtract_checkbox, 1, 0, 1, 2)
        self.cosmic_width_label = QtWidgets.QLabel(self.layoutWidget1)
        self.cosmic_width_label.setObjectName("cosmic_width_label")
        self.gridLayout_4.addWidget(self.cosmic_width_label, 6, 0, 1, 1)
        self.calibrate_checkbox = QtWidgets.QCheckBox(self.layoutWidget1)
        self.calibrate_checkbox.setChecked(False)
        self.calibrate_checkbox.setObjectName("calibrate_checkbox")
        self.gridLayout_4.addWidget(self.calibrate_checkbox, 7, 0, 1, 2)
        self.downconvert_checkbox = QtWidgets.QCheckBox(self.layoutWidget1)
        self.downconvert_checkbox.setChecked(True)
        self.downconvert_checkbox.setObjectName("downconvert_checkbox")
        self.gridLayout_4.addWidget(self.downconvert_checkbox, 0, 0, 1, 2)
        self.cosmic_threshold_label = QtWidgets.QLabel(self.layoutWidget1)
        self.cosmic_threshold_label.setObjectName("cosmic_threshold_label")
        self.gridLayout_4.addWidget(self.cosmic_threshold_label, 5, 0, 1, 1)
        self.exposure_checkbox = QtWidgets.QCheckBox(self.layoutWidget1)
        self.exposure_checkbox.setChecked(True)
        self.exposure_checkbox.setObjectName("exposure_checkbox")
        self.gridLayout_4.addWidget(self.exposure_checkbox, 3, 0, 1, 2)
        self.normalise_checkbox = QtWidgets.QCheckBox(self.layoutWidget1)
        self.normalise_checkbox.setChecked(True)
        self.normalise_checkbox.setObjectName("normalise_checkbox")
        self.gridLayout_4.addWidget(self.normalise_checkbox, 2, 0, 1, 2)
        self.killcosmic_checkbox = QtWidgets.QCheckBox(self.layoutWidget1)
        self.killcosmic_checkbox.setChecked(False)
        self.killcosmic_checkbox.setObjectName("killcosmic_checkbox")
        self.gridLayout_4.addWidget(self.killcosmic_checkbox, 4, 0, 1, 2)
        self.cosmic_threshold_box = QtWidgets.QLineEdit(self.layoutWidget1)
        self.cosmic_threshold_box.setEnabled(False)
        self.cosmic_threshold_box.setText("")
        self.cosmic_threshold_box.setObjectName("cosmic_threshold_box")
        self.gridLayout_4.addWidget(self.cosmic_threshold_box, 5, 1, 1, 1)
        self.cosmic_width_box = QtWidgets.QLineEdit(self.layoutWidget1)
        self.cosmic_width_box.setEnabled(False)
        self.cosmic_width_box.setText("")
        self.cosmic_width_box.setObjectName("cosmic_width_box")
        self.gridLayout_4.addWidget(self.cosmic_width_box, 6, 1, 1, 1)
        self.processing_tab.addTab(self.general_processing, "")
        self.output = QtWidgets.QGroupBox(self.centralwidget)
        self.output.setGeometry(QtCore.QRect(10, 370, 261, 221))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.output.setFont(font)
        self.output.setObjectName("output")
        self.output_tab = QtWidgets.QTabWidget(self.output)
        self.output_tab.setGeometry(QtCore.QRect(20, 70, 231, 141))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.output_tab.setFont(font)
        self.output_tab.setObjectName("output_tab")
        self.OutputOptions = QtWidgets.QWidget()
        self.OutputOptions.setObjectName("OutputOptions")
        self.layoutWidget2 = QtWidgets.QWidget(self.OutputOptions)
        self.layoutWidget2.setGeometry(QtCore.QRect(0, 10, 221, 101))
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.layoutWidget2)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.close_plots_checkbox = QtWidgets.QCheckBox(self.layoutWidget2)
        self.close_plots_checkbox.setObjectName("close_plots_checkbox")
        self.gridLayout_5.addWidget(self.close_plots_checkbox, 1, 0, 1, 1)
        self.stack_plots_checkbox = QtWidgets.QCheckBox(self.layoutWidget2)
        self.stack_plots_checkbox.setObjectName("stack_plots_checkbox")
        self.gridLayout_5.addWidget(self.stack_plots_checkbox, 1, 1, 1, 1)
        self.custom_region_start_textbox = QtWidgets.QLineEdit(self.layoutWidget2)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.custom_region_start_textbox.setFont(font)
        self.custom_region_start_textbox.setText("")
        self.custom_region_start_textbox.setObjectName("custom_region_start_textbox")
        self.gridLayout_5.addWidget(self.custom_region_start_textbox, 3, 0, 1, 1)
        self.region_label = QtWidgets.QLabel(self.layoutWidget2)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.region_label.setFont(font)
        self.region_label.setAlignment(QtCore.Qt.AlignCenter)
        self.region_label.setObjectName("region_label")
        self.gridLayout_5.addWidget(self.region_label, 2, 0, 1, 2)
        self.custom_region_end_textbox = QtWidgets.QLineEdit(self.layoutWidget2)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.custom_region_end_textbox.setFont(font)
        self.custom_region_end_textbox.setText("")
        self.custom_region_end_textbox.setObjectName("custom_region_end_textbox")
        self.gridLayout_5.addWidget(self.custom_region_end_textbox, 3, 1, 1, 1)
        self.browse_write_directory = QtWidgets.QPushButton(self.layoutWidget2)
        self.browse_write_directory.setObjectName("browse_write_directory")
        self.gridLayout_5.addWidget(self.browse_write_directory, 4, 0, 1, 1)
        self.write_directory_box = QtWidgets.QLineEdit(self.layoutWidget2)
        self.write_directory_box.setText("")
        self.write_directory_box.setObjectName("write_directory_box")
        self.gridLayout_5.addWidget(self.write_directory_box, 4, 1, 1, 1)
        self.output_tab.addTab(self.OutputOptions, "")
        self.layoutWidget3 = QtWidgets.QWidget(self.output)
        self.layoutWidget3.setGeometry(QtCore.QRect(20, 30, 221, 29))
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget3)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.plot_data_checkbox = QtWidgets.QCheckBox(self.layoutWidget3)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.plot_data_checkbox.setFont(font)
        self.plot_data_checkbox.setChecked(True)
        self.plot_data_checkbox.setObjectName("plot_data_checkbox")
        self.horizontalLayout.addWidget(self.plot_data_checkbox)
        self.write_file_checkbox = QtWidgets.QCheckBox(self.layoutWidget3)
        self.write_file_checkbox.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.write_file_checkbox.setFont(font)
        self.write_file_checkbox.setChecked(False)
        self.write_file_checkbox.setObjectName("write_file_checkbox")
        self.horizontalLayout.addWidget(self.write_file_checkbox)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(340, 540, 141, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setAutoFillBackground(False)
        self.pushButton.setObjectName("pushButton")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(280, 390, 261, 141))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.gridLayoutWidget_4 = QtWidgets.QWidget(self.groupBox)
        self.gridLayoutWidget_4.setGeometry(QtCore.QRect(10, 30, 241, 100))
        self.gridLayoutWidget_4.setObjectName("gridLayoutWidget_4")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.gridLayoutWidget_4)
        self.gridLayout_7.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.verbose_check = QtWidgets.QCheckBox(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.verbose_check.setFont(font)
        self.verbose_check.setChecked(False)
        self.verbose_check.setObjectName("verbose_check")
        self.gridLayout_7.addWidget(self.verbose_check, 0, 0, 1, 1)
        self.stupid_verbose_check = QtWidgets.QCheckBox(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.stupid_verbose_check.setFont(font)
        self.stupid_verbose_check.setObjectName("stupid_verbose_check")
        self.gridLayout_7.addWidget(self.stupid_verbose_check, 0, 1, 1, 1)
        self.restore_default_button = QtWidgets.QPushButton(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.restore_default_button.setFont(font)
        self.restore_default_button.setObjectName("restore_default_button")
        self.gridLayout_7.addWidget(self.restore_default_button, 1, 0, 1, 1)
        self.quit_button = QtWidgets.QPushButton(self.gridLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.quit_button.setFont(font)
        self.quit_button.setObjectName("quit_button")
        self.gridLayout_7.addWidget(self.quit_button, 1, 1, 1, 1)
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(550, 70, 431, 521))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setObjectName("groupBox_2")
        self.groupBox_3 = QtWidgets.QGroupBox(self.groupBox_2)
        self.groupBox_3.setGeometry(QtCore.QRect(10, 380, 411, 131))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setObjectName("groupBox_3")
        self.referenceTable = QtWidgets.QTableView(self.groupBox_3)
        self.referenceTable.setGeometry(QtCore.QRect(10, 20, 391, 101))
        self.referenceTable.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.referenceTable.setAlternatingRowColors(True)
        self.referenceTable.setObjectName("referenceTable")
        self.groupBox_4 = QtWidgets.QGroupBox(self.groupBox_2)
        self.groupBox_4.setGeometry(QtCore.QRect(10, 90, 411, 291))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox_4.setFont(font)
        self.groupBox_4.setObjectName("groupBox_4")
        self.dataTable = QtWidgets.QTableView(self.groupBox_4)
        self.dataTable.setGeometry(QtCore.QRect(10, 20, 391, 261))
        self.dataTable.setAutoFillBackground(False)
        self.dataTable.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.dataTable.setAlternatingRowColors(True)
        self.dataTable.setObjectName("dataTable")
        self.gridLayoutWidget_3 = QtWidgets.QWidget(self.groupBox_2)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(20, 30, 291, 61))
        self.gridLayoutWidget_3.setObjectName("gridLayoutWidget_3")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.gridLayoutWidget_3)
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.browse_data_directory_2 = QtWidgets.QPushButton(self.gridLayoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.browse_data_directory_2.setFont(font)
        self.browse_data_directory_2.setObjectName("browse_data_directory_2")
        self.gridLayout_6.addWidget(self.browse_data_directory_2, 0, 0, 1, 1)
        self.test_button = QtWidgets.QPushButton(self.gridLayoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.test_button.setFont(font)
        self.test_button.setObjectName("test_button")
        self.gridLayout_6.addWidget(self.test_button, 1, 1, 1, 1)
        self.data_directory_box = QtWidgets.QLineEdit(self.gridLayoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.data_directory_box.setFont(font)
        self.data_directory_box.setObjectName("data_directory_box")
        self.gridLayout_6.addWidget(self.data_directory_box, 0, 1, 1, 1)
        self.auto_sort_button = QtWidgets.QPushButton(self.gridLayoutWidget_3)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.auto_sort_button.setFont(font)
        self.auto_sort_button.setObjectName("auto_sort_button")
        self.gridLayout_6.addWidget(self.auto_sort_button, 1, 0, 1, 1)
        self.gridLayoutWidget_6 = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget_6.setGeometry(QtCore.QRect(20, 20, 831, 41))
        self.gridLayoutWidget_6.setObjectName("gridLayoutWidget_6")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.gridLayoutWidget_6)
        self.gridLayout_9.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.title_label = QtWidgets.QLabel(self.gridLayoutWidget_6)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.title_label.setFont(font)
        self.title_label.setObjectName("title_label")
        self.gridLayout_9.addWidget(self.title_label, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setObjectName("actionHelp")

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.processing_tab.setCurrentIndex(0)
        self.output_tab.setCurrentIndex(0)
        self.data_directory_box.editingFinished.connect(MainWindow.data_directorySlot)
        self.pushButton.clicked.connect(MainWindow.detonateSlot)
        self.upconversion_line_dropdown.currentTextChanged['QString'].connect(MainWindow.upconversion_line_dropdownSlot)
        self.write_file_checkbox.stateChanged['int'].connect(MainWindow.write_file_checkboxSlot)
        self.sample_string_box.editingFinished.connect(MainWindow.sample_stringSlot)
        self.browse_data_directory.clicked.connect(MainWindow.browse_directorySlot)
        self.verbose_check.stateChanged['int'].connect(MainWindow.verboseSlot)
        self.ref_string_box.editingFinished.connect(MainWindow.ref_stringSlot)
        self.calibrate_offset_box.editingFinished.connect(MainWindow.calibrate_offsetSlot)
        self.calibrate_checkbox.clicked['bool'].connect(self.calibrate_offset_box.setEnabled)
        self.calibrate_checkbox.clicked['bool'].connect(self.calibrate_offset_label.setEnabled)
        self.calibrate_checkbox.clicked['bool'].connect(self.calibrate_offset_unit_label.setEnabled)
        self.subtract_checkbox.stateChanged['int'].connect(MainWindow.subtract_checkboxSlot)
        self.downconvert_checkbox.stateChanged['int'].connect(MainWindow.downconvert_checkboxSlot)
        self.normalise_checkbox.stateChanged['int'].connect(MainWindow.normalise_checkboxSlot)
        self.killcosmic_checkbox.clicked['bool'].connect(self.cosmic_threshold_box.setDisabled)
        self.killcosmic_checkbox.stateChanged['int'].connect(MainWindow.cosmic_kill_checkboxSlot)
        self.exposure_checkbox.stateChanged['int'].connect(MainWindow.exposure_checkboxSlot)
        self.killcosmic_checkbox.clicked['bool'].connect(self.cosmic_threshold_box.setEnabled)
        self.killcosmic_checkbox.clicked['bool'].connect(self.cosmic_width_box.setEnabled)
        self.downconvert_checkbox.clicked['bool'].connect(self.upconversion_line_dropdown.setEnabled)
        self.killcosmic_checkbox.clicked['bool'].connect(self.cosmic_width_label.setEnabled)
        self.normalise_checkbox.clicked['bool'].connect(self.ref_string_box.setEnabled)
        self.cosmic_width_box.editingFinished.connect(MainWindow.cosmic_widthSlot)
        self.calibrate_checkbox.stateChanged['int'].connect(MainWindow.calibrate_checkboxSlot)
        self.cosmic_threshold_box.editingFinished.connect(MainWindow.cosmic_thresholdSlot)
        self.downconvert_checkbox.clicked['bool'].connect(self.upconvert_label.setEnabled)
        self.killcosmic_checkbox.clicked['bool'].connect(self.cosmic_threshold_label.setEnabled)
        self.plot_data_checkbox.stateChanged['int'].connect(MainWindow.plot_data_checkboxSlot)
        self.restore_default_button.clicked.connect(MainWindow.clear_persistent_settingsSlot)
        self.browse_signal_files.clicked.connect(MainWindow.browse_signal_filesSlot)
        self.browse_background_files.clicked.connect(MainWindow.browse_background_filesSlot)
        self.browse_ref_files.clicked.connect(MainWindow.browse_reference_filesSlot)
        self.browse_ref_bg_files.clicked.connect(MainWindow.browse_reference_background_filesSlot)
        self.auto_sort_button.clicked.connect(MainWindow.auto_sortSlot)
        self.test_button.clicked.connect(MainWindow.testSlot)
        self.get_data_button.clicked.connect(MainWindow.get_dataSlot)
        self.browse_data_directory_2.clicked.connect(MainWindow.browse_directorySlot)
        self.bg_string_box.editingFinished.connect(MainWindow.bg_string_boxSlot)
        self.subtract_checkbox.clicked['bool'].connect(self.browse_background_files.setEnabled)
        self.subtract_checkbox.clicked['bool'].connect(self.browse_ref_bg_files.setEnabled)
        self.normalise_checkbox.clicked['bool'].connect(self.browse_ref_files.setEnabled)
        self.subtract_checkbox.clicked['bool'].connect(self.bg_string_box.setEnabled)
        self.normalise_checkbox.clicked['bool'].connect(self.browse_ref_bg_files.setEnabled)
        self.stupid_verbose_check.stateChanged['int'].connect(MainWindow.stupid_verboseSlot)
        self.custom_region_end_textbox.editingFinished.connect(MainWindow.custom_region_end_textboxSlot)
        self.custom_region_start_textbox.editingFinished.connect(MainWindow.custom_region_start_textboxSlot)
        self.close_plots_checkbox.stateChanged['int'].connect(MainWindow.close_plotsSlot)
        self.stack_plots_checkbox.stateChanged['int'].connect(MainWindow.stack_plots_checkboxSlot)
        self.quit_button.clicked.connect(MainWindow.quit_Slot)
        self.auto_sort_checkbox.stateChanged['int'].connect(MainWindow.auto_sort_checkSlot)
        self.browse_write_directory.clicked.connect(MainWindow.browse_write_directorySlot)
        self.write_directory_box.editingFinished.connect(MainWindow.write_directory_boxSlot)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.experimental_params.setTitle(_translate("MainWindow", "Experimental Parameters"))
        self.calibrate_offset_box.setToolTip(_translate("MainWindow", "Offset to apply to the spectrum energy axis. "))
        self.calibrate_offset_box.setStatusTip(_translate("MainWindow", "Offset to apply to the spectrum energy axis. "))
        self.calibrate_offset_box.setWhatsThis(_translate("MainWindow", "Offset to apply to the spectrum energy axis in wavenumbers."))
        self.calibrate_offset_box.setPlaceholderText(_translate("MainWindow", "Offset"))
        self.upconversion_line_dropdown.setToolTip(_translate("MainWindow", "Wavelength of the upconverter (vis) beam."))
        self.upconversion_line_dropdown.setStatusTip(_translate("MainWindow", "Wavelength of the upconverter (vis) beam."))
        self.upconversion_line_dropdown.setItemText(0, _translate("MainWindow", "800"))
        self.upconversion_line_dropdown.setItemText(1, _translate("MainWindow", "515"))
        self.upconversion_line_dropdown.setItemText(2, _translate("MainWindow", "804"))
        self.upconversion_line_dropdown.setItemText(3, _translate("MainWindow", "808"))
        self.upconvert_label.setText(_translate("MainWindow", "Upconversion Line"))
        self.calibrate_offset_label.setText(_translate("MainWindow", "Calibration Offset"))
        self.calibrate_offset_unit_label.setText(_translate("MainWindow", "cm-1"))
        self.label.setText(_translate("MainWindow", "nm"))
        self.data_input_box.setTitle(_translate("MainWindow", "Data Input"))
        self.tabWidget.setToolTip(_translate("MainWindow", "Directory where data files are stored."))
        self.tabWidget.setStatusTip(_translate("MainWindow", "Directory where data files are stored."))
        self.ref_string_box.setToolTip(_translate("MainWindow", "String used to identify reference data files."))
        self.ref_string_box.setStatusTip(_translate("MainWindow", "String used to identify reference data files."))
        self.ref_string_box.setWhatsThis(_translate("MainWindow", "The smart file reader will identify any file that contains this string as a reference file."))
        self.ref_string_box.setPlaceholderText(_translate("MainWindow", "Reference String"))
        self.sample_string_box.setToolTip(_translate("MainWindow", "String used to identify signal data files."))
        self.sample_string_box.setStatusTip(_translate("MainWindow", "String used to identify signal data files. "))
        self.sample_string_box.setWhatsThis(_translate("MainWindow", "The smart file reader will identify any file that contains this string as a signal file."))
        self.sample_string_box.setPlaceholderText(_translate("MainWindow", "Sample String"))
        self.get_data_button.setToolTip(_translate("MainWindow", "Run the smart data input to load files."))
        self.get_data_button.setStatusTip(_translate("MainWindow", "Run the smart data input to load files."))
        self.get_data_button.setWhatsThis(_translate("MainWindow", "This will trawl through the selected directory and read in signal, background, and reference files. If auto sort is checked then they will be automatically sorted and matched."))
        self.get_data_button.setText(_translate("MainWindow", "Get Data"))
        self.browse_data_directory.setToolTip(_translate("MainWindow", "Browse for data directory."))
        self.browse_data_directory.setStatusTip(_translate("MainWindow", "Browse for data directory."))
        self.browse_data_directory.setWhatsThis(_translate("MainWindow", "Click here to open a file browser where the directory containing data can be navigated to and selected."))
        self.browse_data_directory.setText(_translate("MainWindow", "Select Directory"))
        self.bg_string_box.setToolTip(_translate("MainWindow", "String used to identify background files."))
        self.bg_string_box.setStatusTip(_translate("MainWindow", "String used to identify background files."))
        self.bg_string_box.setWhatsThis(_translate("MainWindow", "The smart file reader will identify any file that contains this string as a background file."))
        self.bg_string_box.setText(_translate("MainWindow", "_bg"))
        self.bg_string_box.setPlaceholderText(_translate("MainWindow", "Background Identifier"))
        self.auto_sort_checkbox.setToolTip(_translate("MainWindow", "Sort and match data when \"Get Data\" is pressed."))
        self.auto_sort_checkbox.setStatusTip(_translate("MainWindow", "Sort and match data when \"Get Data\" is pressed."))
        self.auto_sort_checkbox.setWhatsThis(_translate("MainWindow", "If checked, the files loaded by the smart reader will be automatically sorted and matched. Equivalent to loading manually and clicking \"Auto Sort\" in file manager."))
        self.auto_sort_checkbox.setText(_translate("MainWindow", "Auto Sort?"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.widget), _translate("MainWindow", "Smart"))
        self.browse_ref_files.setToolTip(_translate("MainWindow", "Load reference data files."))
        self.browse_ref_files.setStatusTip(_translate("MainWindow", "Load reference data files. "))
        self.browse_ref_files.setWhatsThis(_translate("MainWindow", "Opens a file dialog to load reference data files."))
        self.browse_ref_files.setText(_translate("MainWindow", "Reference Files"))
        self.browse_signal_files.setToolTip(_translate("MainWindow", "Load signal data files."))
        self.browse_signal_files.setStatusTip(_translate("MainWindow", "Load signal data files."))
        self.browse_signal_files.setWhatsThis(_translate("MainWindow", "Open a file dialog to load signal data files."))
        self.browse_signal_files.setText(_translate("MainWindow", "Signal Files"))
        self.browse_background_files.setToolTip(_translate("MainWindow", "Load background files."))
        self.browse_background_files.setStatusTip(_translate("MainWindow", "Load background files."))
        self.browse_background_files.setWhatsThis(_translate("MainWindow", "Open a file dialog to load background files."))
        self.browse_background_files.setText(_translate("MainWindow", "Sig Backgrounds"))
        self.browse_ref_bg_files.setToolTip(_translate("MainWindow", "Load reference background files."))
        self.browse_ref_bg_files.setStatusTip(_translate("MainWindow", "Load reference background files."))
        self.browse_ref_bg_files.setWhatsThis(_translate("MainWindow", "Opens a file dialog to load reference background files. "))
        self.browse_ref_bg_files.setText(_translate("MainWindow", "Ref Backgrounds"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Manual"))
        self.data_processing.setTitle(_translate("MainWindow", "Data Processing"))
        self.subtract_checkbox.setToolTip(_translate("MainWindow", "Subtract background spectrum."))
        self.subtract_checkbox.setStatusTip(_translate("MainWindow", "Subtract background spectrum."))
        self.subtract_checkbox.setText(_translate("MainWindow", "Subtract Background?"))
        self.cosmic_width_label.setText(_translate("MainWindow", "Cosmic Width"))
        self.calibrate_checkbox.setToolTip(_translate("MainWindow", "Shift energy axis of spectrum by +calibration offset."))
        self.calibrate_checkbox.setStatusTip(_translate("MainWindow", "Shift energy axis of spectrum by +calibration offset."))
        self.calibrate_checkbox.setWhatsThis(_translate("MainWindow", "Applies a calibration shift of +calibration offset to spectra during processing."))
        self.calibrate_checkbox.setText(_translate("MainWindow", "Calibrate Spectra?"))
        self.downconvert_checkbox.setToolTip(_translate("MainWindow", "Subtract upconversion energy from energy axis."))
        self.downconvert_checkbox.setStatusTip(_translate("MainWindow", "Subtract upconversion energy from energy axis."))
        self.downconvert_checkbox.setWhatsThis(_translate("MainWindow", "Downconversion"))
        self.downconvert_checkbox.setText(_translate("MainWindow", "Downconvert Spectrum?"))
        self.cosmic_threshold_label.setText(_translate("MainWindow", "Cosmic Threshold"))
        self.exposure_checkbox.setToolTip(_translate("MainWindow", "Divide out exposure time from .spe file."))
        self.exposure_checkbox.setStatusTip(_translate("MainWindow", "Divide out exposure time from .spe file."))
        self.exposure_checkbox.setText(_translate("MainWindow", "Divide Exposure Time?"))
        self.normalise_checkbox.setToolTip(_translate("MainWindow", "Divide by reference spectrum."))
        self.normalise_checkbox.setStatusTip(_translate("MainWindow", "Divide by reference spectrum."))
        self.normalise_checkbox.setText(_translate("MainWindow", "Normalise to Reference?"))
        self.killcosmic_checkbox.setToolTip(_translate("MainWindow", "Programmatically remove cosmic rays."))
        self.killcosmic_checkbox.setStatusTip(_translate("MainWindow", "Programmatically remove cosmic rays."))
        self.killcosmic_checkbox.setText(_translate("MainWindow", "Kill Cosmic Rays?"))
        self.cosmic_threshold_box.setToolTip(_translate("MainWindow", "The height that a spectral feature needs to be above the baseline to be considered for cosmic ray removal."))
        self.cosmic_threshold_box.setStatusTip(_translate("MainWindow", "The height that a spectral feature needs to be above the baseline to be considered for cosmic ray removal."))
        self.cosmic_threshold_box.setWhatsThis(_translate("MainWindow", "The height that a spectral feature needs to be above the baseline to be considered for cosmic ray removal."))
        self.cosmic_threshold_box.setPlaceholderText(_translate("MainWindow", "Default: 0.01"))
        self.cosmic_width_box.setToolTip(_translate("MainWindow", "The maximum width (in pixels) for a spectral feature to be considered a cosmic ray - if it is wider than this it is presumed to be real."))
        self.cosmic_width_box.setStatusTip(_translate("MainWindow", "The maximum width (in pixels) for a spectral feature to be considered a cosmic ray - if it is wider than this it is presumed to be real."))
        self.cosmic_width_box.setWhatsThis(_translate("MainWindow", "The maximum width (in pixels) for a spectral feature to be considered a cosmic ray - if it is wider than this it is presumed to be real."))
        self.cosmic_width_box.setPlaceholderText(_translate("MainWindow", "Default: 5"))
        self.processing_tab.setTabText(self.processing_tab.indexOf(self.general_processing), _translate("MainWindow", "General"))
        self.output.setTitle(_translate("MainWindow", "Output"))
        self.close_plots_checkbox.setToolTip(_translate("MainWindow", "Close currently open plots on next run."))
        self.close_plots_checkbox.setStatusTip(_translate("MainWindow", "Close currently open plots on next run."))
        self.close_plots_checkbox.setWhatsThis(_translate("MainWindow", "If checked then currently open matplotlib figures will be closed when the program is next run."))
        self.close_plots_checkbox.setText(_translate("MainWindow", "Close Plots?"))
        self.stack_plots_checkbox.setToolTip(_translate("MainWindow", "Plot data from currently loaded files on one figure."))
        self.stack_plots_checkbox.setStatusTip(_translate("MainWindow", "Plot data from currently loaded files on one figure."))
        self.stack_plots_checkbox.setWhatsThis(_translate("MainWindow", "If checked then all the data from the currently loaded files will be plotted on one figure, useful for comparisons. "))
        self.stack_plots_checkbox.setText(_translate("MainWindow", "Stack Plots?"))
        self.custom_region_start_textbox.setToolTip(_translate("MainWindow", "Start of region to be plotted in wavenumbers."))
        self.custom_region_start_textbox.setStatusTip(_translate("MainWindow", "Start of region to be plotted in wavenumbers."))
        self.custom_region_start_textbox.setWhatsThis(_translate("MainWindow", "Start of region to be plotted, data is masked to between start and end, and autoscaled after masking."))
        self.custom_region_start_textbox.setPlaceholderText(_translate("MainWindow", "Start"))
        self.region_label.setText(_translate("MainWindow", "Region of Interest (in cm<sup>-1</sup>)"))
        self.custom_region_end_textbox.setToolTip(_translate("MainWindow", "End of region to be plotted in wavenumbers."))
        self.custom_region_end_textbox.setStatusTip(_translate("MainWindow", "End of region to be plotted in wavenumbers."))
        self.custom_region_end_textbox.setWhatsThis(_translate("MainWindow", "End of region to be plotted, data is masked to between start and end, and autoscaled after masking."))
        self.custom_region_end_textbox.setPlaceholderText(_translate("MainWindow", "End"))
        self.browse_write_directory.setToolTip(_translate("MainWindow", "Browse for write directory."))
        self.browse_write_directory.setStatusTip(_translate("MainWindow", "Browse for write directory."))
        self.browse_write_directory.setWhatsThis(_translate("MainWindow", "Opens a dialog where the write directory can be selected."))
        self.browse_write_directory.setText(_translate("MainWindow", "Browse.."))
        self.write_directory_box.setToolTip(_translate("MainWindow", "Directory where data will be written."))
        self.write_directory_box.setStatusTip(_translate("MainWindow", "Directory where data will be written."))
        self.write_directory_box.setWhatsThis(_translate("MainWindow", "The directory where output txt data will be written."))
        self.write_directory_box.setPlaceholderText(_translate("MainWindow", "Write Directory"))
        self.output_tab.setTabText(self.output_tab.indexOf(self.OutputOptions), _translate("MainWindow", "Output Options"))
        self.plot_data_checkbox.setToolTip(_translate("MainWindow", "Plot data using matplotlib."))
        self.plot_data_checkbox.setStatusTip(_translate("MainWindow", "Plot data using matplotlib."))
        self.plot_data_checkbox.setWhatsThis(_translate("MainWindow", "If checked then the data from each signal file is plotted using matplotlib."))
        self.plot_data_checkbox.setText(_translate("MainWindow", "Plot Data?"))
        self.write_file_checkbox.setToolTip(_translate("MainWindow", "Write data to a .txt file."))
        self.write_file_checkbox.setStatusTip(_translate("MainWindow", "Write data to a .txt file."))
        self.write_file_checkbox.setWhatsThis(_translate("MainWindow", "If checked then processed data from each signal file is written to a .txt file"))
        self.write_file_checkbox.setText(_translate("MainWindow", "Write to File Output?"))
        self.pushButton.setToolTip(_translate("MainWindow", "Press me to process data!"))
        self.pushButton.setStatusTip(_translate("MainWindow", "Process data."))
        self.pushButton.setText(_translate("MainWindow", "Go!"))
        self.groupBox.setTitle(_translate("MainWindow", "Program Options"))
        self.verbose_check.setToolTip(_translate("MainWindow", "Enter verbose mode."))
        self.verbose_check.setStatusTip(_translate("MainWindow", "Enter verbose mode."))
        self.verbose_check.setWhatsThis(_translate("MainWindow", "Prints detail to the terminal. "))
        self.verbose_check.setText(_translate("MainWindow", "Verbose?"))
        self.stupid_verbose_check.setToolTip(_translate("MainWindow", "Enter stupidly verbose mode."))
        self.stupid_verbose_check.setStatusTip(_translate("MainWindow", "Enter stupidly verbose mode."))
        self.stupid_verbose_check.setWhatsThis(_translate("MainWindow", "Prints ludicrous detail to the terminal."))
        self.stupid_verbose_check.setText(_translate("MainWindow", "Stupidly Verbose?"))
        self.restore_default_button.setToolTip(_translate("MainWindow", "<html><head/><body><p>Default behaviour is that user inputs are persistent between runs - click this will clear them and restore defaults. Requires restart of program.</p></body></html>"))
        self.restore_default_button.setStatusTip(_translate("MainWindow", "Clear persistent user inputs."))
        self.restore_default_button.setText(_translate("MainWindow", "Restore Defaults"))
        self.quit_button.setText(_translate("MainWindow", "Quit"))
        self.groupBox_2.setTitle(_translate("MainWindow", "File Manager"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Reference Files"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Data Files"))
        self.browse_data_directory_2.setToolTip(_translate("MainWindow", "Browse for data directory."))
        self.browse_data_directory_2.setStatusTip(_translate("MainWindow", "Browse for data directory."))
        self.browse_data_directory_2.setText(_translate("MainWindow", "Browse.."))
        self.test_button.setToolTip(_translate("MainWindow", "Print the files to be processed as a list to the terminal."))
        self.test_button.setStatusTip(_translate("MainWindow", "Print the files to be processed as a list to the terminal."))
        self.test_button.setWhatsThis(_translate("MainWindow", "Print the files to be processed as a list to the terminal."))
        self.test_button.setText(_translate("MainWindow", "Check Files"))
        self.data_directory_box.setToolTip(_translate("MainWindow", "Directory where the data files are located."))
        self.data_directory_box.setPlaceholderText(_translate("MainWindow", "Data Directory"))
        self.auto_sort_button.setToolTip(_translate("MainWindow", "Sort and match loaded data."))
        self.auto_sort_button.setStatusTip(_translate("MainWindow", "Sort and match loaded data."))
        self.auto_sort_button.setText(_translate("MainWindow", "Auto Sort"))
        self.title_label.setText(_translate("MainWindow", "SFGTools GUI - v1.0"))
        self.actionHelp.setText(_translate("MainWindow", "Help Me"))
        self.actionHelp.setToolTip(_translate("MainWindow", "Enter Help Mode"))

